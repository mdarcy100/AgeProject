\documentclass{article}

\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage[utf8]{inputenc}

\begin{document}

\title{Creighton method results for Age project}
\author{M D'Arcy}
\maketitle

<<>>=

#M D'Arcy
# final analysis for the age paper
# # Slightly modified by M D'Arcy in Summer 2011 (Creighton method added to look at correlation with age profile)
# 	1) retrieve clusterable gene list without including fold change (~800)
#   2) use fold change restriction to get a smaller set of genes (~165) for use:
#			a)  in survival analysis
#			b)  to generate age profile
#				* calculate difference between median of old vs young expression in 165 genes, 
#				* set to -1 or 1 for positive or negative (up or down regulated relative)
#	3) Creighton method to test NKI and Caldas dataset again age-set
#			a) calculate the correlation for both datasets against the 'profile' generated above.
# 			b) see if it corresponds to good (hopefully old) vs bad (hopefully young) signatures.

#################################################################################
##
## Set working and data directories
##
#################################################################################

setwd("/Users/mdarcy100/Desktop/MTroester/AgePaper/AgeManuscript_062011/")
data.dir <- "./RawData/"

#################################################################################
##
## Load required libraries
##
#################################################################################
#MD: needed to install biobase prior to using the library Biobase
#source("http://bioconductor.org/biocLite.R")
#biocLite("Biobase")
#########
library(Biobase)
## library(genefilter)
library(hgug4112a.db)
library(gdata)
## library(pamr)
library(qvalue)
## library(cluster)
library(survival)
library(gplots)
library(limma)
## library(samr)
library(RColorBrewer)
## library(GOstats)
## library(clValid)

##MD: can't seem to install made4 package - get error with the first command.  the second works
#install.packages("made4", repos = "http://www.bioconductor.org")
#need to install made4 prior to using it
#source("http://bioconductor.org/biocLite.R")
#biocLite("made4")
library(made4)
###MD: needed to also install mclust, flexmix, modeltools,multcomp,mvtnorm for fpc to install
library(fpc)

source("age_paper_scripts2.R")

#################################################################################
##
## Load processed microarray data sets
##
#################################################################################

load("sig_fold_rm_eset.RData") ## all significant probes with > certain fold change (164 probes)
load("sig_full_rm_eset.RData") ## all significant probes, will use this one (802 probes) for crieghton analysis since too few overlap with the two other datasets
load("caldas_eset.RData") ## process_CaldasSamples.R
load("nki295_eset.RData") ## process_NKI295samples.R

dim(sig.fold.rm.eset)
dim(sig.full.rm.eset)
dim(caldas.eset)
dim(nki295.eset)

#rownames(exprs(sig.fold.rm.eset)) #this should be the probe id
#rownames(exprs(sig.full.rm.eset)) #this should be the probe id, will retreive the entrez id from this value
rownames(exprs(caldas.eset[1:2,])) #these are symbols (will need to get entrez id id)
rownames(exprs(nki295.eset[1:2,])) #ACCESSION Number (need entrez id)
#RefSeq accession number of sequence used to design oligonucleotide probe
#################################################################################
###		MD - Aug 2011 - for Creighton method and making an age profile need those 
### 	
###		< 30 and > 40
### from data generated after main analysis (see age_decade_analysis_RM.R)

#featureData(sig.fold.rm.eset)

###first collapse the entrez ids to single genes
	
##### First collapseID based on entrez ids...
#     there are 145 of these (from 164) from the fold change ones
#     there are 719/802 unique probes
   
#xd<-apply(xd,2,as.numeric)
   
# the entrez ids associated with the probes of our data
entrez.fold<-as.vector(unlist(mget(rownames(exprs(sig.fold.rm.eset)),env=hgug4112aENTREZID)))
entrez.full<-as.vector(unlist(mget(rownames(exprs(sig.full.rm.eset)),env=hgug4112aENTREZID)))

   	
collapsed.sig.fold.rm.eset<-collapseIDs(exprs(sig.fold.rm.eset),entrez.fold,"mean")
collapsed.sig.full.rm.eset<-collapseIDs(exprs(sig.full.rm.eset),entrez.full,"mean")

#prior to calculating the age signature, determine which NKI genes are in these collapsed lists, then do survival analysis on these genes

## Prepare NKI295 data (stolen almost exactly from age_decade_analysis_RM.R)
## The nki295 expression ratios are most likely (need to verify) log10

## Determine which probes do not have an Entrez ID either NAs or ''
## more of a problem with 'symbol'

dim(nki295.eset)
nki295.eset <- nki295.eset[!is.na(featureData(nki295.eset)$geneid),]
dim(nki295.eset)



if(any(featureData(nki295.eset)$symbol == "")){
    nki295.eset <- nki295.eset[-which(featureData(nki295.eset)$symbol==""),]
}
dim(nki295.eset)

## Median center the NKI295 data
medians.nki295 <- esApply(nki295.eset,1,median)
nki295.exprs.scale <- t(scale(t(exprs(nki295.eset)),center=medians.nki295,scale=FALSE))

## Create a new eset
nki295.scale.eset <- nki295.eset
exprs(nki295.scale.eset) <- nki295.exprs.scale
dim(nki295.scale.eset)

## Remove low variability probes - this may not be necessary
iqr.val.nki295.scale <- esApply(nki295.scale.eset,1,function(x){IQR(x,na.rm = TRUE)})

hist(iqr.val.nki295.scale,sqrt(length(iqr.val.nki295.scale)))


high.iqr.inds.nki295 <- which(iqr.val.nki295.scale > median(iqr.val.nki295.scale))

nki295.scale.eset <- nki295.scale.eset[high.iqr.inds.nki295,]
dim(nki295.scale.eset)
# MD did this
#Features  Samples 
#    8800      295 


high.iqr.probes.nki295 <- mod.findLargest(featureNames(nki295.scale.eset),
                                          iqr.val.nki295.scale[high.iqr.inds.nki295],
                                         featureData(nki295.scale.eset)$symbol)


nki295.scale.eset <- nki295.scale.eset[high.iqr.probes.nki295,]
dim(nki295.scale.eset)
#MD did this:
#Features  Samples 
#    8034      295 

## Remove genes with more than one value in the geneid -
## This is very confusing. In some cases a probe matches to two different symbols/ids,
## both of which are distinct and valid. In other
## cases one or more of the ids/symbols are invalid.
## To avoid confusion, conduct analysis without the mult. ids (approx 317)
all(grep("\\|",featureData(nki295.scale.eset)$symbol) == grep("\\|",featureData(nki295.scale.eset)$geneid))

nki295.mult.inds <- grep("\\|",featureData(nki295.scale.eset)$symbol)
nki295.mult.ids <- cbind(featureData(nki295.scale.eset)$geneid[nki295.mult.inds],featureData(nki295.scale.eset)$symbol[nki295.mult.inds])

nki295.scale.eset <- nki295.scale.eset[-nki295.mult.inds,]
dim(nki295.scale.eset)
# MD results:
#Features  Samples 
#    7717      295 

## Map probes found from Limma analysis of RM data to entrez ids for the NKI295 data
## I have not fully QC'd the matching - could be a better way of doing this.
#list.entrez <- na.omit(unlist(mget(rownames(exprs(sig.fold.rm.eset)),env=hgug4112aENTREZID)))
#list.symbol <- na.omit(unlist(mget(rownames(exprs(sig.fold.rm.eset)),env=hgug4112aSYMBOL)))

nki.match.vec <- vector("numeric",length=dim(nki295.scale.eset)["Features"])
names(nki.match.vec) <- featureNames(nki295.scale.eset)

for(e.id in unique(entrez.fold)){ #should be 719 of these
    e.id.pattern <- paste("(^",e.id,"$|\\|",e.id,"$|^",e.id,"\\|$|\\|",e.id,"\\|)",sep="")
    nki.match.ind <- grepl(e.id.pattern,featureData(nki295.scale.eset)$geneid)
    if(any(nki.match.ind)){
        nki.match.vec[nki.match.ind] <- nki.match.vec[nki.match.ind]+1
    }
}

nki.gene.match.full <- names(nki.match.vec[nki.match.vec !=0])
nkiSub.eset <- nki295.scale.eset[nki.gene.match.full,]

#### MD testing something 
dim(nkiSub.eset)
###MD results:
#Features  Samples 
#      67      295

#################################################################################
#
# FINDING AGE SIGNATURE FOR COMMON GENES IN NKI DATASET  
# to get age signature for NKI data (use data where there is overlap)
#
#################################################################################
RM_NKI_OVERLAP.eset <- collapsed.sig.fold.rm.eset[rownames(collapsed.sig.fold.rm.eset)%in% featureData(nkiSub.eset)$geneid,]
 dim(RM_NKI_OVERLAP.eset )
#[1] 67  76
	
#NOTE: will need to sort the NKI data prior to correlation analysis

exprs.age.fold.young<-RM_NKI_OVERLAP.eset[,sig.fold.rm.eset$age<30]
dim(exprs.age.fold.young) #20

exprs.age.fold.old<-RM_NKI_OVERLAP.eset[,sig.fold.rm.eset$age>39]
dim(exprs.age.fold.old) #23

medians.exprs.young <- apply(exprs.age.fold.young,1,median)
medians.exprs.old <- apply(exprs.age.fold.old,1,median)


young_signature<-as.matrix(medians.exprs.young)
old_signature<-as.matrix(medians.exprs.old)

#will need to set to -1 if < 0 or 1 if > 0
age_signature<-as.matrix(medians.exprs.young-medians.exprs.old)
age_signature_cast<-as.matrix(apply(age_signature,1,castDirection))
age_names<-rownames(age_signature) #vector of probe'ids

#################################################################################
#
### NKI SURVIVAL ANALYSIS to get good/bad prognosis people, then do correlation
#
#################################################################################

# SORT PRIOR TO CLUSTERING/SURVIVAL ANALYSIS !!!!sort data by entrez id
nkiSub.eset.age.clust<-exprs(nkiSub.eset) #should be 380 elements in Aug 2011

#set the rownames of expression data to entrez id so the same as our dataset
rownames(nkiSub.eset.age.clust) <- featureData(nkiSub.eset)$geneid

#nki_entrez<-as.vector(unlist(mget(rownames(exprs(sig.fold.rm.eset)),env=hgug4112aENTREZID)))$entrez

#sort by entrez ids since our dataset is sorted by that rowname - need to be in order to do correlation
nkiSub.eset.age.clust<-nkiSub.eset.age.clust[order(rownames(nkiSub.eset.age.clust)),]

#reset column name of expression array
exprs(nkiSub.eset)<-nkiSub.eset.age.clust


nki.pam.2.daisy <- pam(daisy(t(nkiSub.eset.age.clust)),2)

@

<<label=fig1plot,include=FALSE>>=
clusplot(nki.pam.2.daisy, labels = 2, col.p = nki.pam.2.daisy$clustering)
@
\begin{figure}
\begin{center}
<<label=fig1,fig=TRUE,echo=FALSE>>=
<<fig1plot>>
@
\end{center}
\caption{Cluster of NKI data selected from fold/significant genes}
\label{fig:one}
\end{figure}

<<>>=
all(colnames(nkiSub.eset) ==  names(nki.pam.2.daisy$clustering))
colnames(exprs(nkiSub.eset))
nki.clust.ind <- sort.int(nki.pam.2.daisy$clustering, index.return=TRUE)$ix
pData(nkiSub.eset)$clustering <- nki.pam.2.daisy$clustering

nki.pam.clust.sort <- names(nki.pam.2.daisy$clustering[nki.clust.ind])
nkiSub.clust.eset <- nkiSub.eset[,nki.clust.ind]

## Overall survival for the NKI patitents (380 people who overlap genes with full dataset)
nki.surv.clust.death <- coxph(Surv(nkiSub.clust.eset$"survival(death)",nkiSub.clust.eset$"event_death" ) ~
                    +factor(nkiSub.clust.eset$clustering))
summary(nki.surv.clust.death)
@

<<label=fig2plot,include=FALSE>>=
plot(survfit(Surv(nkiSub.clust.eset$"survival(death)",nkiSub.clust.eset$"event_death" ) ~
                    +factor(nkiSub.clust.eset$clustering)),
     lty = 1:2,col=c("blue","red"), mark.time = TRUE, ylab = "Probability",
     xlab = "Survival Time")

@
\begin{figure}
\begin{center}
<<label=fig2,fig=TRUE,echo=FALSE>>=
<<fig2plot>>
@
\end{center}
\caption{Cluster of NKI data selected from fold/significant genes}
\label{fig:two}
\end{figure}

START CREIGHTON METHOD NOW

FIRST SUBSET BASED ON SURVIVAL

<<>>=
###   SUBSET data for good and bad survival
nkiSub.clust.eset.bad<-nkiSub.clust.eset[,nkiSub.clust.eset$clustering==2]
dim(nkiSub.clust.eset.bad)
#Features  Samples 
#     380      182 	

nkiSub.clust.eset.good<-nkiSub.clust.eset[,nkiSub.clust.eset$clustering==1]
dim(nkiSub.clust.eset.good)
#Features  Samples 
#     380      113 	


###########################################################################################
#     CREIGHTON METHOD for NKI data
####  MD: to get correlation matrix for nkiSub.est from AgeSignature
#### need to get those entrez ids that appear in age signature
###########################################################################################


#look at characteristics of good prognosis correlated with the signature

	nki_castgood_cor<-cor(exprs(nkiSub.clust.eset.good),age_signature_cast)
	nki_castgood_cor<-sort(nki_castgood_cor)
	hist(nki_castgood_cor)
	length(nki_castgood_cor)
	median(nki_castgood_cor)
	mean(nki_castgood_cor)
	quantile(nki_castgood_cor)

	
	nki_good_cor<-cor(exprs(nkiSub.clust.eset.good),age_signature)
	nki_good_cor<-sort(nki_good_cor)
	hist(nki_good_cor)
	length(nki_good_cor)
	median(nki_good_cor)
	mean(nki_good_cor)
	quantile(nki_good_cor)
	

	nki_goodyoung_cor<-cor(exprs(nkiSub.clust.eset.good),young_signature)
	nki_goodyoung_cor<-sort(nki_goodyoung_cor)
	hist(nki_goodyoung_cor)
	length(nki_goodyoung_cor)
	median(nki_goodyoung_cor)
	mean(nki_goodyoung_cor)
	quantile(nki_goodyoung_cor)


	nki_goodold_cor<-cor(exprs(nkiSub.clust.eset.good),old_signature)
	nki_goodold_cor<-sort(nki_goodold_cor)
	hist(nki_goodold_cor)
	length(nki_goodold_cor)
	median(nki_goodold_cor)
	mean(nki_goodold_cor)
	quantile(nki_goodold_cor)



#look at characteristics of bad prognosis correlated with the signature

	nki_castbad_cor<-cor(exprs(nkiSub.clust.eset.bad),age_signature_cast)
	nki_castbad_cor<-sort(nki_castbad_cor)
	hist(nki_castbad_cor)
	length(nki_castbad_cor)
	median(nki_castbad_cor)
	mean(nki_castbad_cor)
	quantile(nki_castbad_cor)

	nki_bad_cor<-cor(exprs(nkiSub.clust.eset.bad),age_signature)
	 nki_bad_cor<-sort(nki_bad_cor)
	length(nki_bad_cor)
	median(nki_bad_cor)
	mean(nki_bad_cor)
	quantile(nki_bad_cor)

	nki_badyoung_cor<-cor(exprs(nkiSub.clust.eset.bad),young_signature)
	nki_badyoung_cor<-sort(nki_badyoung_cor)
	length(nki_badyoung_cor)
	median(nki_badyoung_cor)
	mean(nki_badyoung_cor)
	quantile(nki_badyoung_cor)
	
	nki_badold_cor<-cor(exprs(nkiSub.clust.eset.bad),old_signature)
	nki_badold_cor<-sort(nki_badold_cor)
	length(nki_badold_cor)
	median(nki_badold_cor)
	mean(nki_badold_cor)
	quantile(nki_badold_cor)

@

<<label=fig3plot,include=FALSE>>=

	#look at correlations on the graph
	plot(nki_bad_cor,pch='.',col='red', main="NKI: correlation with age signatures", ylab="correlation",xlab="sample")
	points(nki_castbad_cor,pch=20,col='orange')
	points(nki_badyoung_cor, pch='*', col='red')
	points(nki_badold_cor, pch='+', col='red')
	
	points(nki_castgood_cor,pch=20,col='purple')
	points(nki_good_cor, pch='.', col='blue')
	points(nki_goodyoung_cor, pch='*', col='blue')
	points(nki_goodold_cor, pch='+', col='blue')
	
	text(50,.35,"orange=creighton correlation with bad dx", cex=.9)
	text(50,.30,"purple=creighton correlation with good dx", cex=.9)
	text(25,.2, "blue=good", cex=.9)
	text(25,.15, "red=bad", cex=.9)
	text(25,.25,"*=young, +=old",cex=.9)

@

\begin{figure}
\begin{center}
<<label=fig3,fig=TRUE,echo=FALSE>>=
<<fig3plot>>

@
\end{center}
\caption{Correlation with age signature (NKI)}
\label{fig:three}
\end{figure}


*********************CALDAS DATA ANALYSIS BEGINS HERE***************************

<<>>=
###########################################################################################
###########################################################################################
####
####   CALDAS DATASET ANALYSIS
####
###########################################################################################
###########################################################################################


#
# FINDING AGE SIGNATURE FOR COMMON GENES IN CALDAS DATASET  
# to get age signature for caldas data (use data where there is overlap)
# No entrez ids for this dataset - need to use the the symbol and then collapse on that
#################################################################################
#featureNames(caldas.eset)

#get the symbols associated with the probe names
symbol.fold <- as.vector(unlist(mget(rownames(exprs(sig.fold.rm.eset)),env=hgug4112aSYMBOL)))
symbol.full<-as.vector(unlist(mget(rownames(exprs(sig.full.rm.eset)),env=hgug4112aSYMBOL)))

#collapse on the symbol so that they are unique	(145/164 and 719/802)
collapsed.symbol.fold.rm.eset<-collapseIDs(exprs(sig.fold.rm.eset),symbol.fold,"mean")
collapsed.symbol.full.rm.eset<-collapseIDs(exprs(sig.full.rm.eset),symbol.full,"mean")

##find overlap with the CALDAS dataset
intersect(rownames(collapsed.symbol.fold.rm.eset),featureNames(caldas.eset))
intersect(featureNames(caldas.eset),rownames(collapsed.symbol.fold.rm.eset))
## 

RM_CALDAS_OVERLAP.eset <- collapsed.symbol.fold.rm.eset[rownames(collapsed.symbol.fold.rm.eset)%in% featureNames(caldas.eset),]
dim(RM_CALDAS_OVERLAP.eset )
#[1] 111  76
	
#NOTE: will not need to sort prior to correlation analysis (the two datasets appear to be sorted the same way already (by symbol name))

exprs.age.fold.young<-RM_CALDAS_OVERLAP.eset[,sig.fold.rm.eset$age<30]
dim(exprs.age.fold.young) #20

exprs.age.fold.old<-RM_CALDAS_OVERLAP.eset[,sig.fold.rm.eset$age>39]
dim(exprs.age.fold.old) #23

medians.exprs.young <- apply(exprs.age.fold.young,1,median)
medians.exprs.old <- apply(exprs.age.fold.old,1,median)

young_signature<-as.matrix(medians.exprs.young)
old_signature<-as.matrix(medians.exprs.old)


#will need to set to -1 if < 0 or 1 if > 0
age_signature<-as.matrix(medians.exprs.young-medians.exprs.old)
age_signature_cast<-as.matrix(apply(age_signature,1,castDirection))
age_names<-rownames(age_signature) #vector of probe'ids


####CLUSTER THE GENES (first subset the original caldas dataset to those genes that overlap with original list)
caldasSub.eset <- caldas.eset[featureNames(caldas.eset) %in% rownames(RM_CALDAS_OVERLAP.eset),]
dim(caldasSub.eset)
#Features  Samples 
#     111      135 

caldasSub.eset.clust<-exprs(caldasSub.eset)

caldas.pam.2.daisy <- pam(daisy(t(caldasSub.eset.clust)),2)

@

<<label=fig4plot,include=FALSE>>=
clusplot(caldas.pam.2.daisy, labels = 2, col.p = caldas.pam.2.daisy$clustering)
@

\begin{figure}
\begin{center}
<<label=fig4,fig=TRUE,echo=FALSE>>=
<<fig4plot>>
@
\end{center}
\caption{Cluster of Caldas data}
\label{fig:four}
\end{figure}

<<>>=
all(colnames(caldasSub.eset) ==  names(caldas.pam.2.daisy$clustering))

caldas.clust.ind <- sort.int(caldas.pam.2.daisy$clustering, index.return=TRUE)$ix
colnames(exprs(caldasSub.eset))

pData(caldasSub.eset)$clustering <- caldas.pam.2.daisy$clustering
caldas.pam.clust.sort <- names(caldas.pam.2.daisy$clustering[caldas.clust.ind])

caldasSub.clust.eset <- caldasSub.eset[,caldas.clust.ind]

caldas.test.ind <- which(caldasSub.clust.eset$Dead == 0 | caldasSub.clust.eset$Dead == 1)

####SURVIVAL for 135 people, not as significant as other group
caldas.surv.clust.death <- coxph(Surv(caldasSub.clust.eset[,caldas.test.ind]$Survival/12,caldasSub.clust.eset[,caldas.test.ind]$Dead ) ~
                    +factor(caldasSub.clust.eset[,caldas.test.ind]$clustering))
summary(caldas.surv.clust.death)

@

<<label=fig5plot,include=FALSE>>=
plot(survfit(Surv(caldasSub.clust.eset[,caldas.test.ind]$Survival/12,caldasSub.clust.eset[,caldas.test.ind]$Dead) ~
                    +factor(caldasSub.clust.eset[,caldas.test.ind]$clustering)),lty = 1:2,col=c("blue","red"), mark.time = TRUE, ylab = "Probability",
     xlab = "Survival Time")

legend(15, 1, legend = c("cluster 1", "cluster 2"), lty = c(1,2), bty = "n")

@
  
  \begin{figure}
\begin{center}
<<label=fig5,fig=TRUE,echo=FALSE>>=
<<fig5plot>>
@
\end{center}
\caption{Survival curves for Caldas samples}
\label{fig:five}
\end{figure}

Now look at CALDAS correlation with the age signature (young, old, combined): Creighton method
FIRST NEED TO SUBSET INTO GOOD AND BAD SURVIVAL

<<>>=
###   SUBSET data for good and bad survival
caldasSub.clust.eset.bad<-caldasSub.clust.eset[,caldasSub.clust.eset$clustering==2]
dim(caldasSub.clust.eset.bad)
#Features  Samples 
#     111      66 	

caldasSub.clust.eset.good<-caldasSub.clust.eset[,caldasSub.clust.eset$clustering==1]
dim(caldasSub.clust.eset.good)
#Features  Samples 
#     111     69	


###########################################################################################
#     CREIGHTON METHOD for CALDAS data
####  MD: to get correlation matrix for caldasSub.eset from AgeSignature
#### these are matched and sorted by symbol
###########################################################################################
	caldas_castgood_cor<-cor(exprs(caldasSub.clust.eset.good),age_signature_cast)
	caldas_castgood_cor<-sort(caldas_castgood_cor)
	hist(caldas_castgood_cor)
	length(caldas_castgood_cor)
	median(caldas_castgood_cor)
	mean(caldas_castgood_cor)
	quantile(caldas_castgood_cor)

	caldas_good_cor<-cor(exprs(caldasSub.clust.eset.good),age_signature)
	caldas_good_cor<-sort(caldas_good_cor)
	hist(caldas_good_cor)
	length(caldas_good_cor)
	median(caldas_good_cor)
	mean(caldas_good_cor)
	quantile(caldas_good_cor)


	caldas_goodyoung_cor<-cor(exprs(caldasSub.clust.eset.good),young_signature)
	caldas_goodyoung_cor<-sort(caldas_goodyoung_cor)
	hist(caldas_goodyoung_cor)
	length(caldas_goodyoung_cor)
	median(caldas_goodyoung_cor)
	mean(caldas_goodyoung_cor)
	quantile(caldas_goodyoung_cor)


	caldas_goodold_cor<-cor(exprs(caldasSub.clust.eset.good),old_signature)
	caldas_goodold_cor<-sort(caldas_goodold_cor)
	hist(caldas_goodold_cor)
	length(caldas_goodold_cor)
	median(caldas_goodold_cor)
	mean(caldas_goodold_cor)
	quantile(caldas_goodold_cor)


#look at characteristics of bad prognosis correlated with the signature

	caldas_castbad_cor<-cor(exprs(caldasSub.clust.eset.bad),age_signature_cast)
	caldas_castbad_cor<-sort(caldas_castbad_cor)
	hist(caldas_castbad_cor)
	length(caldas_castbad_cor)
	median(caldas_castbad_cor)
	mean(caldas_castbad_cor)
	quantile(caldas_castbad_cor)

	caldas_bad_cor<-cor(exprs(caldasSub.clust.eset.bad),age_signature)
	 caldas_bad_cor<-sort(caldas_bad_cor)
	length(caldas_bad_cor)
	median(caldas_bad_cor)
	mean(caldas_bad_cor)
	quantile(caldas_bad_cor)
	
	caldas_badyoung_cor<-cor(exprs(caldasSub.clust.eset.bad),young_signature)
	caldas_badyoung_cor<-sort(caldas_badyoung_cor)
	length(caldas_badyoung_cor)
	median(caldas_badyoung_cor)
	mean(caldas_badyoung_cor)
	quantile(caldas_badyoung_cor)

	caldas_badold_cor<-cor(exprs(caldasSub.clust.eset.bad),old_signature)
	caldas_badold_cor<-sort(caldas_badold_cor)
	length(caldas_badold_cor)
	median(caldas_badold_cor)
	mean(caldas_badold_cor)
	quantile(caldas_badold_cor)
@

<<label=fig6plot,include=FALSE>>=

	plot(caldas_bad_cor,pch='.',col='red', main="CALDAS: correlation with age signatures", ylab="correlation",xlab="sample")
	points(caldas_castbad_cor,pch=20,col='orange')
	points(caldas_badyoung_cor, pch='*', col='red')
	points(caldas_badold_cor, pch='+', col='red')
	
	points(caldas_castgood_cor,pch=20,col='purple')
	points(caldas_good_cor, pch='.', col='blue')
	points(caldas_goodyoung_cor, pch='*', col='blue')
	points(caldas_goodold_cor, pch='+', col='blue')
	
	
	text(50,.25,"orange=creighton correlation with bad dx", cex=.7)
	text(50,.30,"purple=creighton correlation with good dx", cex=.7)
	text(25,.20, "blue=good", cex=.7)
	text(25,.15, "red=bad", cex=.7)
	text(25,.25,"*=young, +=old",cex=.7)
@

\begin{figure}
\begin{center}
<<label=fig6,fig=TRUE,echo=FALSE>>=
<<fig6plot>>

@
\end{center}
\caption{Correlation with age signature (CALDAS)}
\label{fig:six}
\end{figure}



\end{document}
